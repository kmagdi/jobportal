{"version":3,"sources":["components/Navbar.js","components/debounce.js","components/useFetch.js","components/csvToJson.js","components/Footer.js","components/Row.js","components/MyTable.js","components/FilterBar.js","components/FormInput.js","components/Detail.js","components/NotFound.js","App.js","index.js"],"names":["Navbar","useState","prevScrollPos","setPrevScrollPos","visible","setVisible","handleScroll","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","currentScrollPos","window","pageYOffset","useEffect","addEventListener","removeEventListener","style","position","height","width","backgroundColor","color","textAlign","transition","top","to","textDecoration","useFetch","url","data","loading","state","setState","console","log","fetch","then","resp","text","csvToJSON","str","delimiter","titles","slice","indexOf","split","rows","map","row","values","reduce","object","curr","i","Footer","contactData","String","className","location","adress","tel","email","omid","Row","job","Fragment","id","jobName","jobLocation","jobType","posted","MyTable","filteredData","obj","FilterBar","searchedWord","setsearchedWord","filtered","filter","handleSearch","e","target","document","getElementById","value","sortedJobType","Set","item","sort","a","b","sortedJobName","JSON","stringify","toLocaleLowerCase","includes","type","placeholder","aria-label","onChange","length","FormInput","Detail","match","setItem","msg","setMsg","params","response","jobJSON","forEach","element","push","name","qualification","advantages","starTdate","NotFound","App","basename","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.508f8181.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport { debounce } from './debounce';  \r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n  const [prevScrollPos, setPrevScrollPos] = useState(0); \r\n  const [visible, setVisible] = useState(true);  \r\n\r\n  const handleScroll = debounce(() => {\r\n    const currentScrollPos = window.pageYOffset;\r\n    setVisible((prevScrollPos > currentScrollPos && prevScrollPos - currentScrollPos > 70) || currentScrollPos < 10);\r\n    setPrevScrollPos(currentScrollPos);\r\n }, 100);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [prevScrollPos, visible, handleScroll]);\r\n\r\n  const navbarStyles = {\r\n    position: 'fixed',\r\n    height: '100px',\r\n    width: '100%',\r\n    backgroundColor: '#333D79FF',\r\n    color:'#FAEBEFFF',\r\n    textAlign: 'center',\r\n    transition: 'top 0.6s'\r\n    \r\n  }\r\n\r\n  return (\r\n    <div style={{ ...navbarStyles, top: visible ? '0' : '-100px' }}>  \r\n <Link to=\"/\"  style={{ color: '#FAEBEFFF',textDecoration:\"underline #FAEBEFFF\" }}>\r\n         <h2  >Kecskeméti Szakképzési Centrum  </h2>   \r\n        <h4 >Állásportál <small>(gyakorlati projektfeladat)</small></h4>\r\n</Link>\r\n    </div>\r\n  );\r\n};\r\n","export function debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};","import { useEffect, useState } from 'react';\r\n\r\nexport const useFetch=(url)=>{\r\n    const [state,setState]=useState({data:null,loading:true})\r\n    console.log('url='+url)\r\n    useEffect(()=>{\r\n        console.log('url use effect='+url)\r\n        fetch(url)\r\n            .then(resp=>resp.text())\r\n            .then(text=>{\r\n                console.log('text='+text)\r\n                setState({data:text,loading:false})\r\n            })\r\n    },[url]);\r\n\r\n    return state;\r\n}","function csvToJSON(str, delimiter = ';') {\r\n    const titles = str.slice(0, str.indexOf('\\n')).split(delimiter);\r\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\r\n    return rows.map(row => {\r\n        const values = row.split(delimiter);\r\n        return titles.reduce((object, curr, i) => (object[curr] = values[i], object), {})\r\n    });\r\n  };\r\n  \r\n  export default csvToJSON","import { useFetch } from './useFetch';\r\nimport csvToJSON from \"./csvToJson\"\r\n\r\nexport const Footer=()=>{\r\n  const url=\"https://raw.githubusercontent.com/kmagdi/KSZC-Data/master/elerhetosegek.csv\"    \r\n  const {data,loading}=useFetch(url)\r\n  const contactJSON=csvToJSON(String(data), ';')\r\n  const contactData=contactJSON[0]\r\n    return(\r\n        <div className=\"card-group \">\r\n              <div className=\"card \" style={{ backgroundColor:'#333D79FF',color:'#FAEBEFFF'}}>\r\n                  <div  className=\"card-footer  foot\"><small ><b>Székhely:</b>{contactData.location}</small>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card\" style={{ backgroundColor:'#333D79FF'}}>\r\n                  <div className=\"card-footer  lpc\">\r\n                      <small ><b>Levelezési cím:</b>{contactData.adress}</small>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card\" style={{ backgroundColor:'#333D79FF'}}>\r\n                  <div className=\"card-footer  lpc\">\r\n                      <small ><b>Telefon:</b>{contactData.tel}</small>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card\" style={{ backgroundColor:'#333D79FF'}}>\r\n                  <div className=\"card-footer  lpc\">\r\n                      <small ><b>E-mail:</b>{contactData.email}</small>\r\n                  </div>\r\n              </div>\r\n              <div className=\"card\" style={{ backgroundColor:'#333D79FF'}}>\r\n                  <div className=\"card-footer  lpc\">\r\n                      <small ><b>OM azonosító:</b>{contactData.omid}</small>\r\n                  </div>\r\n              </div>             \r\n          </div>\r\n          \r\n    )\r\n}","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport {  Tr, Td } from 'react-super-responsive-table';\r\n\r\nexport const Row=({job})=>{\r\n \r\n        return(\r\n            <React.Fragment>\r\n            <Tr className=\"text-center\">\r\n                <Td className=\"text-left\" key={job.id}><Link style={{ color: '#333D79FF',textDecoration:\"underline #333D79FF\" }} to={`/detail/${job.id},${job.jobName}`}>{job.jobName} </Link></Td>\r\n                <Td >{job.jobLocation}</Td>\r\n                <Td >{job.jobType}</Td>\r\n                <Td >{job.posted}</Td>\r\n            </Tr>              \r\n        </React.Fragment>          \r\n        )\r\n    }","import {Row} from \"./Row\"\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n\r\n\r\n\r\nexport const MyTable=({filteredData})=>{\r\n   return(\r\n       <div>\r\n          \r\n            <Table className=\"table table-hover \">\r\n                <Thead  style={{ backgroundColor: '#333D79FF',color:'#FAEBEFFF'}}>\r\n                    <Tr className=\"text-center\">\r\n                        <Th className=\"text-left\" >Állás megnevezése</Th>\r\n                        <Th >Munkavégzés helye</Th>\r\n                        <Th >Állás típusa</Th>\r\n                        <Th >Közzétevő</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {filteredData.map((obj)=><Row key={obj.id} job={obj}/>)  }       \r\n                </Tbody>\r\n            </Table>\r\n    \r\n       </div>              \r\n    )\r\n}","import React, { useState, useEffect } from 'react'; \r\nimport {useFetch } from './useFetch';\r\nimport csvToJSON from \"./csvToJson\"\r\nimport {MyTable} from \"./MyTable\"\r\n\r\n\r\nexport const FilterBar = () => {\r\n  const [searchedWord,setsearchedWord]=useState('')\r\n\r\n  const urlJobs=\"https://raw.githubusercontent.com/kmagdi/KSZC-Data/master/allasok.csv\"\r\n\r\n  const {data,loading}=useFetch(urlJobs)\r\n  const jobsJSON=csvToJSON(String(data), ';')\r\n  const filtered=jobsJSON.filter(obj=>obj.jobName!=null)  //a plussz ures sor kitorlese\r\n\r\n  const handleSearch=(e)=>{\r\n    console.log(e.target.id)\r\n    if(e.target.id==\"jobName\") {\r\n        document.getElementById(\"jobType\").value=\"1\";\r\n       \r\n    }\r\n    if(e.target.id==\"jobType\") {\r\n        document.getElementById(\"jobName\").value=\"1\";\r\n        document.getElementById(\"word\").value=\"\"\r\n    }\r\n    if(e.target.id==\"word\") {\r\n        document.getElementById(\"jobName\").value=\"1\";\r\n        document.getElementById(\"jobType\").value=\"1\"\r\n    }\r\n    e.target.value==1? setsearchedWord(''): setsearchedWord(e.target.value)\r\n}\r\n\r\n  const uniqueJobType = [...new Set(filtered.map(item => item.jobType))]\r\n  const sortedJobType=uniqueJobType.sort((a,b) => (a > b) ? 1 : ((b > a) ? -1 : 0));   \r\n  const uniqueJobName = [...new Set(filtered.map(item => item.jobName))]\r\n  const sortedJobName=uniqueJobName.sort((a,b) => (a > b) ? 1 : ((b > a) ? -1 : 0));   \r\n\r\n  const filteredData =filtered.filter(obj => JSON.stringify(obj).toLocaleLowerCase().includes(searchedWord.toLocaleLowerCase())) \r\n       \r\n //console.log(\"filterbar:\"+Object.keys(filteredData))\r\n    \r\n    return(\r\n      <div className=\"container-fluid p-5 \" style={{ backgroundColor: '#FAEBEFFF',color: '#333D79FF' }}>\r\n        <div className=\"row p-5 border justify-content-center\">\r\n                  <form className=\"form-inline\" >\r\n                      <label >Kulcsszavas keresés:</label>\r\n                      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" id=\"word\"\r\n                              value={searchedWord} onChange={handleSearch}/>\r\n                 \r\n                      <select className=\"form-control mr-sm-2 m-3\" onChange={handleSearch} id=\"jobName\" >\r\n                          <option value=\"1\">állás nevek</option>{sortedJobName.map(obj=><option className=\"text-dark\">{obj}</option>)}</select>     \r\n                    \r\n                      <select className=\"form-control mr-sm-2 m-3\"  onChange={handleSearch} id=\"jobType\">\r\n                          <option  value=\"1\">állás típusok</option>{sortedJobType.map(obj=><option className=\"text-dark\">{obj}</option>)}</select>     \r\n                       <label>A meghirdetett állások száma:{filtered.length}</label>  \r\n                  </form>\r\n\r\n                <MyTable filteredData={filteredData} />\r\n     \r\n     </div>    \r\n</div>\r\n    )\r\n\r\n}\r\n","export const FormInput=()=>{\r\n    return(\r\n        <h1>form...</h1>\r\n    )\r\n}","import React, { useState,useEffect } from 'react';\r\nimport csvToJSON from \"./csvToJson\" \r\nimport {Link} from \"react-router-dom\"\r\nimport {FormInput} from \"./FormInput\"\r\nimport { Table,Thead,Th, Tr, Td } from 'react-super-responsive-table';\r\nimport {useFetch} from \"./useFetch\"\r\n\r\nexport const Detail=({match})=>{\r\n    const [item,setItem]=useState({})\r\n    const [msg,setMsg]=useState('')\r\n\r\n    useEffect(()=>{\r\n      console.log(\"neve:\"+match.params.jobName)\r\n        const url=\"https://raw.githubusercontent.com/kmagdi/KSZC-Data/master/reszletek.csv\"\r\n        fetch(url)\r\n        .then(response=>response.text())\r\n        .then(text=>{\r\n            console.log('twxt='+text)\r\n          const jobJSON=csvToJSON(text, ';')\r\n          \r\n          const job=[]\r\n          jobJSON.forEach(element => {\r\n            element.id==match.params.id?job.push(element):console.log(element.id)\r\n          });\r\n          \r\n            console.log(\"job=\"+job[0])\r\n            job.length>0 ? setItem(job[0]): setMsg(\"nincsenek adatok\")\r\n        });\r\n    },[])\r\n\r\n\r\n   /* const url=\"https://raw.githubusercontent.com/kmagdi/KSZC-Data/master/reszletek.csv\"\r\n    const {data,loading}=useFetch(url)\r\n    console.log(\"data=\"+data)\r\n    const dataJSON=csvToJSON(String(data), ';')\r\n    console.log(\"dataJson=\"+Object.keys(dataJSON[0]))\r\n    const job=dataJSON.filter(obj=>obj.jobName!=null && obj.id==match.params.id)  \r\n    console.log(job)\r\n\r\n    */\r\n  \r\n\r\n   \r\n    return(\r\n        <div className=\"container-fluid p-5 \" style={{ backgroundColor: '#FAEBEFFF',color: '#333D79FF' }}>\r\n        <h3 className='m-5'>{match.params.jobName} </h3>\r\n        <p>{msg? msg : ''}</p>\r\n      <div className=\"row   justify-content-center\">\r\n       <div className=\"col-sm-6 table-responsive-sm \">\r\n        <Table className=\"table table-hover table-bordered m-5 \">\r\n          <Tr className=\"text-left\">         \r\n                  <Tr>\r\n                    <Th >Intézmény neve</Th>\r\n                    <Td>{item.name}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Intézmény címe</Th>\r\n                    <Td>{item.adress}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>E-mail cím</Th>\r\n                     <Td>{item.email}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Jogviszony időtartama</Th>\r\n                    <Td>...</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Foglalkoztatás jellege</Th>\r\n                    <Td>...</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Munkavégzés helye</Th>\r\n                    <Td>{item.location}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Feladat típusa</Th>\r\n                    <Td>{item.type}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Elvárt képzes</Th>\r\n                    <Td>{item.qualification}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>Előnyök</Th>\r\n                    <Td>{item.advantages}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                    <Th>BetölThetőség időpontja</Th>\r\n                    <Td>{item.starTdate}</Td>\r\n                  </Tr>\r\n                  <Tr>\r\n                     <Th>Jelentkezési határidő</Th>\r\n                     <Td>...</Td>\r\n                  </Tr> \r\n              </Tr>   \r\n       </Table>\r\n      </div> \r\n      <div className=\"col-sm-3\"><FormInput /></div>\r\n  </div> \r\n</div>\r\n                     \r\n )\r\n}                                 \r\n\r\n","export const NotFound=()=>{\r\n    return(\r\n        <h1> ...ez az oldal nem található...</h1>\r\n    )\r\n}","import React from 'react';\nimport { Navbar } from './components/Navbar'\nimport {Footer} from './components/Footer'\nimport { FilterBar } from './components/FilterBar'\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\nimport { Detail} from './components/Detail';\nimport {NotFound} from './components/NotFound'\n//import \"./App.css\"\n\n\nexport const App = () => {\n  return (\n    <BrowserRouter basename=\"/jobportal\">\n       <Navbar />\n      \n         <Switch>\n          \n          <Route path=\"/\" exact component={ FilterBar}/>\n          <Route path=\"/jobportal\"  component={ FilterBar}/>\n           <Route path=\"/detail/:id,:jobName\" exact component={Detail}/>\n           <Route component={NotFound} />\n        </Switch>\n        <Footer/>\n    </BrowserRouter>\n   )  \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport {App} from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';    \n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}